# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

steps:
  - task: UseDotNet@2
    displayName: 'Install .NET SDK'
    inputs:
      packageType: 'sdk'
      version: '7.x'  # Specify the .NET SDK version compatible with your project
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - script: dotnet restore --ignore-failed-sources --verbosity detailed
    displayName: 'Restore NuGet Packages (Debug Mode)'

  - task: DotNetCoreCLI@2
    displayName: 'Build Solution'
    inputs:
      command: 'build'
      projects: '**/*.sln'  # Builds all solution files
      arguments: '--configuration $(buildConfiguration)'

  # **Start MongoDB in Docker**
  - script: |
      docker run -d --name mongodb -p 27017:27017 mongo:latest
    displayName: 'Start MongoDB in Docker'

  - script: |
      for i in {1..10}; do
        nc -zv localhost 27017 && exit 0
        sleep 3
      done
      exit 1
    displayName: 'Ensure MongoDB is Ready'

  - script: |
      nc -zv localhost 27017
    displayName: 'Check MongoDB Connection'

  # **Debug: List All .csproj Files**
  - script: find $(System.DefaultWorkingDirectory) -name "*.csproj"
    displayName: 'Debug: List all .csproj files'

  - task: DotNetCoreCLI@2
    displayName: 'Run Tests'
    inputs:
      command: 'test'
      projects: '$(System.DefaultWorkingDirectory)/**/*.IntegrationTests.csproj'
      arguments: '--logger trx --results-directory $(Agent.TempDirectory)/TestResults --configuration Release --verbosity detailed'





